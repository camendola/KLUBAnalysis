
# the definition of composed selections. Can contain as well TCut style selections, e.g.:
# resolved = baseline, btagMM, massCut
# resolvedHighPt = baseline, btagMM, massCut, dau1_pt > 150
# use comma separated lists
[selections]

### some selections with tes up/down
### note: jets are selected at skim level to have pt > 20
### so I am raising the pt value to 25 just to test the change in the acceptance
#nosel = pairType > -999

baseline_nominal     = pairType == 0 && dau1_pt > 23 && abs(dau1_eta) < 2.1 && dau2_pt > 20         && abs(dau2_eta) < 2.3 && nleps == 0 && bjet1_pt_raw > 25         && bjet2_pt_raw > 25
baseline_tesUp       = pairType == 0 && dau1_pt > 23 && abs(dau1_eta) < 2.1 && dau2_pt_tauup > 20   && abs(dau2_eta) < 2.3 && nleps == 0 && bjet1_pt_raw > 25         && bjet2_pt_raw > 25
baseline_tesDown     = pairType == 0 && dau1_pt > 23 && abs(dau1_eta) < 2.1 && dau2_pt_taudown > 20 && abs(dau2_eta) < 2.3 && nleps == 0 && bjet1_pt_raw > 25         && bjet2_pt_raw > 25
baseline_jesUp       = pairType == 0 && dau1_pt > 23 && abs(dau1_eta) < 2.1 && dau2_pt > 20         && abs(dau2_eta) < 2.3 && nleps == 0 && bjet1_pt_raw_jetup > 25   && bjet2_pt_raw_jetup > 25
baseline_jesDown     = pairType == 0 && dau1_pt > 23 && abs(dau1_eta) < 2.1 && dau2_pt > 20         && abs(dau2_eta) < 2.3 && nleps == 0 && bjet1_pt_raw_jetdown > 25 && bjet2_pt_raw_jetdown > 25
ellypsMassCut_tesUp    = ((tauH_SVFIT_mass_up-116.)*(tauH_SVFIT_mass_up-116.))/(35.*35.) + ((bH_mass_raw-111.)*(bH_mass_raw-111.))/(45.*45.) <  1.0
ellypsMassCut_tesDown  = ((tauH_SVFIT_mass_down-116.)*(tauH_SVFIT_mass_down-116.))/(35.*35.) + ((bH_mass_raw-111.)*(bH_mass_raw-111.))/(45.*45.) <  1.0
ellypsMassCut_jesUp    = ((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.))/(35.*35.) + ((bH_mass_raw_jetup-111.)*(bH_mass_raw_jetup-111.))/(45.*45.) <  1.0
ellypsMassCut_jesDown  = ((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.))/(35.*35.) + ((bH_mass_raw_jetdown-111.)*(bH_mass_raw_jetdown-111.))/(45.*45.) <  1.0

s1b1jresolvedMcutlmr70_nominal = baseline_nominal , btagM,  isBoosted != 1 , ellypsMassCut, lmrBDTCut70rej
s2b0jresolvedMcutlmr70_nominal = baseline_nominal , btagMM, isBoosted != 1 , ellypsMassCut, lmrBDTCut70rej
s1b1jresolvedMcutlmr90_nominal = baseline_nominal , btagM,  isBoosted != 1 , ellypsMassCut, lmrBDTCut90rej
s2b0jresolvedMcutlmr90_nominal = baseline_nominal , btagMM, isBoosted != 1 , ellypsMassCut, lmrBDTCut90rej
s1b1jresolvedMcuthmr90_nominal = baseline_nominal , btagM,  isBoosted != 1 , ellypsMassCut, hmrBDTCut90rej
s2b0jresolvedMcuthmr90_nominal = baseline_nominal , btagMM, isBoosted != 1 , ellypsMassCut, hmrBDTCut90rej
sboostedLLMcut_nominal         = baseline_nominal , btagLL, isBoosted == 1 , boostMassCut

s1b1jresolvedMcutlmr70_tesUp = baseline_tesUp , btagM,  isBoosted != 1 , ellypsMassCut_tesUp, lmrBDTCut70rej
s2b0jresolvedMcutlmr70_tesUp = baseline_tesUp , btagMM, isBoosted != 1 , ellypsMassCut_tesUp, lmrBDTCut70rej
s1b1jresolvedMcutlmr90_tesUp = baseline_tesUp , btagM,  isBoosted != 1 , ellypsMassCut_tesUp, lmrBDTCut90rej
s2b0jresolvedMcutlmr90_tesUp = baseline_tesUp , btagMM, isBoosted != 1 , ellypsMassCut_tesUp, lmrBDTCut90rej
s1b1jresolvedMcuthmr90_tesUp = baseline_tesUp , btagM,  isBoosted != 1 , ellypsMassCut_tesUp, hmrBDTCut90rej
s2b0jresolvedMcuthmr90_tesUp = baseline_tesUp , btagMM, isBoosted != 1 , ellypsMassCut_tesUp, hmrBDTCut90rej
sboostedLLMcut_tesUp         = baseline_tesUp , btagLL, isBoosted == 1 , boostMassCut

s1b1jresolvedMcutlmr70_tesDown = baseline_tesDown , btagM,  isBoosted != 1 , ellypsMassCut_tesDown, lmrBDTCut70rej
s2b0jresolvedMcutlmr70_tesDown = baseline_tesDown , btagMM, isBoosted != 1 , ellypsMassCut_tesDown, lmrBDTCut70rej
s1b1jresolvedMcutlmr90_tesDown = baseline_tesDown , btagM,  isBoosted != 1 , ellypsMassCut_tesDown, lmrBDTCut90rej
s2b0jresolvedMcutlmr90_tesDown = baseline_tesDown , btagMM, isBoosted != 1 , ellypsMassCut_tesDown, lmrBDTCut90rej
s1b1jresolvedMcuthmr90_tesDown = baseline_tesDown , btagM,  isBoosted != 1 , ellypsMassCut_tesDown, hmrBDTCut90rej
s2b0jresolvedMcuthmr90_tesDown = baseline_tesDown , btagMM, isBoosted != 1 , ellypsMassCut_tesDown, hmrBDTCut90rej
sboostedLLMcut_tesDown         = baseline_tesDown , btagLL, isBoosted == 1 , boostMassCut

s1b1jresolvedMcutlmr70_jesUp = baseline_jesUp , btagM,  isBoosted != 1 , ellypsMassCut_jesUp, lmrBDTCut70rej
s2b0jresolvedMcutlmr70_jesUp = baseline_jesUp , btagMM, isBoosted != 1 , ellypsMassCut_jesUp, lmrBDTCut70rej
s1b1jresolvedMcutlmr90_jesUp = baseline_jesUp , btagM,  isBoosted != 1 , ellypsMassCut_jesUp, lmrBDTCut90rej
s2b0jresolvedMcutlmr90_jesUp = baseline_jesUp , btagMM, isBoosted != 1 , ellypsMassCut_jesUp, lmrBDTCut90rej
s1b1jresolvedMcuthmr90_jesUp = baseline_jesUp , btagM,  isBoosted != 1 , ellypsMassCut_jesUp, hmrBDTCut90rej
s2b0jresolvedMcuthmr90_jesUp = baseline_jesUp , btagMM, isBoosted != 1 , ellypsMassCut_jesUp, hmrBDTCut90rej
sboostedLLMcut_jesUp         = baseline_jesUp , btagLL, isBoosted == 1 , boostMassCut


s1b1jresolvedMcutlmr70_jesDown = baseline_jesDown , btagM,  isBoosted != 1 , ellypsMassCut_jesDown, lmrBDTCut70rej
s2b0jresolvedMcutlmr70_jesDown = baseline_jesDown , btagMM, isBoosted != 1 , ellypsMassCut_jesDown, lmrBDTCut70rej
s1b1jresolvedMcutlmr90_jesDown = baseline_jesDown , btagM,  isBoosted != 1 , ellypsMassCut_jesDown, lmrBDTCut90rej
s2b0jresolvedMcutlmr90_jesDown = baseline_jesDown , btagMM, isBoosted != 1 , ellypsMassCut_jesDown, lmrBDTCut90rej
s1b1jresolvedMcuthmr90_jesDown = baseline_jesDown , btagM,  isBoosted != 1 , ellypsMassCut_jesDown, hmrBDTCut90rej
s2b0jresolvedMcuthmr90_jesDown = baseline_jesDown , btagMM, isBoosted != 1 , ellypsMassCut_jesDown, hmrBDTCut90rej
sboostedLLMcut_jesDown         = baseline_jesDown , btagLL, isBoosted == 1 , boostMassCut

###############################################################
realOnly =  (nRealTaus == -1 || nRealTaus == 1)

baseline     = pairType == 0 && dau1_pt > 22 && abs (dau1_eta) < 2.1 && dau2_pt > 20 && abs (dau2_eta) < 2.3 && nleps == 0 && nbjetscand > 1
baseline92     = pairType == 0 && dau1_pt > 22 && abs (dau1_eta) < 2.1 && dau2_pt > 20 && abs (dau2_eta) < 2.3 && nleps == 0 && nbjetscand > 1

baselineHTauTau     = pairType == 0 && dau1_pt > 22 && abs (dau1_eta) < 2.1 && dau2_pt > 20 && abs (dau2_eta) < 2.3 && nleps == 0
baselineHTauTau92     = pairType == 0 && dau1_pt > 22 && abs (dau1_eta) < 2.1 && dau2_pt > 20 && abs (dau2_eta) < 2.3 && nleps == 0






baselineOld     = baseline, dau1_pt > 23 && dau2_pt > 21
baseline_wlep     = pairType == 0 && dau1_pt > 22 && abs (dau1_eta) < 2.1 && dau2_pt > 20 && abs (dau2_eta) < 2.3
baselineVBF  = baseline, isVBF == 1
baselineNoVBF  = baseline, isVBF == 0
btagL        = bjet1_bID_deepCSV > 0.1522 && bjet2_bID_deepCSV < 0.1522
btagM        = bjet1_bID_deepCSV > 0.4941 && bjet2_bID_deepCSV < 0.4941
btag1M        = bjet1_bID_deepCSV > 0.4941
btagLL       = bjet1_bID_deepCSV > 0.1522 && bjet2_bID_deepCSV > 0.1522
btagMM       = bjet1_bID_deepCSV > 0.4941 && bjet2_bID_deepCSV > 0.4941
nobtagMM     = bjet1_bID_deepCSV < 0.4941 && bjet2_bID_deepCSV < 0.4941
massCut      = bH_mass_raw > 80 && bH_mass_raw < 160 && tauH_SVFIT_mass > 80 && tauH_SVFIT_mass < 160
massCutCent  = tauH_SVFIT_mass > 79.5 && tauH_SVFIT_mass < 152.5 && bH_mass_raw > 74.5 && bH_mass_raw < 147.5
boostMassCut = tauH_SVFIT_mass > 79.5 && tauH_SVFIT_mass < 152.5 && fatjet_softdropMass > 90 && fatjet_softdropMass < 160
circMassCut    = TMath::Sqrt((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.) + (bH_mass_raw-111.)*(bH_mass_raw-111.)) <  40.0
ellypsMassCut  = ((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.))/(35.*35.) + ((bH_mass_raw-111.)*(bH_mass_raw-111.))/(45.*45.) <  1.0
ringCut = TMath::Sqrt((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.) + (bH_mass_raw-111.)*(bH_mass_raw-111.)) >  40.0 && TMath::Sqrt((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.) + (bH_mass_raw-111.)*(bH_mass_raw-111.)) < 60.0
ringCutLarge = TMath::Sqrt((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.) + (bH_mass_raw-111.)*(bH_mass_raw-111.)) >  40.0 && TMath::Sqrt((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.) + (bH_mass_raw-111.)*(bH_mass_raw-111.)) < 80.0
ringCutVLarge = TMath::Sqrt((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.) + (bH_mass_raw-111.)*(bH_mass_raw-111.)) >  40.0 && TMath::Sqrt((tauH_SVFIT_mass-116.)*(tauH_SVFIT_mass-116.) + (bH_mass_raw-111.)*(bH_mass_raw-111.)) < 100.0
massSideband = bH_mass_raw > 156 && bH_mass_raw < 256 && tauH_SVFIT_mass > 151 && tauH_SVFIT_mass <  251
MTcut        = mT1 < 30
resBDTCut    = BDTResonant > 0.4
nonresBDTCut = LepTauKine > -0.134

### to optimize the BDT WP, these are the cuts for the X% rejection efficiency on the ttbar, in the 2b0j resolved region
### three sets of cuts for the three BDT trained. NOTE: signal efficiencies associated can change depending on the signal!

SR           = isOS != 0 && dau1_iso < 0.15 && dau2_MVAisoNew >= 3
SRloose           = isOS != 0 && dau1_iso < 0.15 && dau2_MVAisoNew >= 2
SStight      = isOS == 0 && dau1_iso < 0.15 && dau2_MVAisoNew >= 3   
SStighter      = isOS == 0 && dau1_iso < 0.15 && dau2_MVAisoNew >= 2   
OSrlx        = isOS != 0 && dau1_iso < 0.15 && dau2_MVAisoNew >= 1
SSrlx        = isOS == 0 && dau1_iso < 0.15 && dau2_MVAisoNew >= 1
OSinviso     = isOS != 0 && dau1_iso < 0.15 && dau2_MVAisoNew >= 1 && dau2_MVAisoNew < 3
SSinviso     = isOS == 0 && dau1_iso < 0.15 && dau2_MVAisoNew >= 1 && dau2_MVAisoNew < 3

SRforEff      = SR, genDecMode1 == 0
#SRforEffNoSel = pairType > -999

baselineBstd = baseline, isBoosted == 1



baselineMassCut = baseline, ellypsMassCut


###single-l trigger
single = ((pass_triggerbit >> 0)&1 ||(pass_triggerbit >> 1)&1)

baseline_single =  pairType == 0 && dau1_pt > 22 && abs (dau1_eta) < 2.1 && dau2_pt > 20 && abs (dau2_eta) < 2.3 && nleps == 0 && nbjetscand > 1, single
baselineHTauTau_single =  pairType == 0 && dau1_pt > 22 && abs (dau1_eta) < 2.1 && dau2_pt > 20 && abs (dau2_eta) < 2.3 && nleps == 0, single
s1b1jresolved_single = s1b1jresolved, single
s2b0jresolved_single = s2b0jresolved, single

#only single-l trigger
onlysingle = ((pass_triggerbit >> 0)&1 ||(pass_triggerbit >> 1)&1) && !((pass_triggerbit >> 7)&1)
baseline_onlysingle = baseline, onlysingle

###cross trigger
cross = (pass_triggerbit >> 7)&1

baseline_cross =  pairType == 0 && dau1_pt > 22 && abs (dau1_eta) < 2.1 && dau2_pt > 20 && abs (dau2_eta) < 2.3 && nleps == 0 && nbjetscand > 1, cross
baselineHTauTau_cross =  pairType == 0 && dau1_pt > 22 && abs (dau1_eta) < 2.1 && dau2_pt > 20 && abs (dau2_eta) < 2.3 && nleps == 0, cross
s1b1jresolved_cross = s1b1jresolved, cross
s2b0jresolved_cross = s2b0jresolved, cross

#only cross trigger
onlycross = ((pass_triggerbit >> 7)&1) && !((pass_triggerbit >> 0)&1 ||(pass_triggerbit >> 1)&1)
baseline_onlycross = baseline, onlycross


s2b0jresolved_mvis100 = s2b0jresolved, tauH_mass > 100
s2b0jresolved_single_mvis100 = s2b0jresolved, single, tauH_mass > 100
s2b0jresolved_cross_mvis100 = s2b0jresolved, cross, tauH_mass > 100


antiB        = baseline , nobtagMM, single
antiB_jets30        = baseline , nobtagMM, single, bjet1_pt > 30 &&  bjet2_pt > 30
antiB_jets30_tau30        = baseline , nobtagMM, single, bjet1_pt > 30 &&  bjet2_pt > 30 && dau2_pt > 30 
antiB_mT1cut        = baseline , nobtagMM, MTcut, tauH_SVFIT_mass > 60  && ditau_deltaR < 2
antiB_mT1cut_single        = baseline_single , nobtagMM, MTcut, tauH_SVFIT_mass > 60  && ditau_deltaR < 2
antiB_mT1cut_cross        = baseline_cross , nobtagMM, MTcut, tauH_SVFIT_mass > 60  && ditau_deltaR < 2
antiB_mT1large       = baseline, mT1 > 60, nobtagMM, single
antiB_mT1large_jets30       = baseline, mT1 > 50, nobtagMM, single,  bjet1_pt > 30 &&  bjet2_pt > 30
antiB_mT1large_jets30_tau30       = baseline, mT1 > 50, nobtagMM, single,  bjet1_pt > 30 &&  bjet2_pt > 30 &&dau2_pt > 30

antiB_mTlarge       = baseline, mT1 > 60, nobtagMM, single, mT2 > 40
antiB_mTlarge_4jets       = baseline, mT1 > 60, nobtagMM, single, mT2 > 40, njets < 4




s1b1j        = baseline , btagM
s2b0j        = baseline , btagMM
s0b2j        = baseline , nobtagMM

s1b1jresolved = baseline , btagM, isBoosted != 1
s1bresolved = baseline , btag1M, isBoosted != 1
s2b0jresolved = baseline , btagMM, isBoosted != 1
nomH = tauH_SVFIT_mass > 130 || bH_mass > 130
s2b0jresolved_nomH = s2b0jresolved, nomH
sboostedLL    = baseline , btagLL, isBoosted == 1
sboostedMM    = baseline , btagMM, isBoosted == 1

s1b1jresolvedMcut = baseline , btagM, isBoosted != 1 , ellypsMassCut
s2b0jresolvedMcut = baseline , btagMM, isBoosted != 1 , ellypsMassCut

s2b0jresolvedRingCut = baseline , btagMM, isBoosted != 1 , ringCut


s1b1jresolvedMcutBDT = baseline , btagM, isBoosted != 1 , ellypsMassCut, nonresBDTCut
s2b0jresolvedMcutBDT = baseline , btagMM, isBoosted != 1 , ellypsMassCut, nonresBDTCut
sboostedLLMcut       = baseline , btagLL, isBoosted == 1 , boostMassCut
sboostedMMMcut       = baseline , btagMM, isBoosted == 1 , boostMassCut


s1b1jMcut    = baseline , btagM , ellypsMassCut
s2b0jMcut    = baseline , btagMM , ellypsMassCut
s1b1jMcutBDT = baseline , btagM , ellypsMassCut, nonresBDTCut
s2b0jMcutBDT = baseline , btagMM , ellypsMassCut, nonresBDTCut

#### uncomment this later!!
# s1b1jresolvedMcutnr90  = s1b1jresolvedMcut, nrBDTCut90rej
s1b1jresolvedMcutlmr90 = s1b1jresolvedMcut, lmrBDTCut90rej
s1b1jresolvedMcuthmr90 = s1b1jresolvedMcut, hmrBDTCut90rej

# s2b0jresolvedMcutnr90  = s2b0jresolvedMcut, nrBDTCut90rej
s2b0jresolvedMcutlmr90 = s2b0jresolvedMcut, lmrBDTCut90rej
s2b0jresolvedMcuthmr90 = s2b0jresolvedMcut, hmrBDTCut90rej

s1b1jresolvedMcutlmr70 = s1b1jresolvedMcut, lmrBDTCut70rej
s2b0jresolvedMcutlmr70 = s2b0jresolvedMcut, lmrBDTCut70rej


s2b0jMassSideband = baseline , btagMM, massSideband
s2b0jMassSidebandRing = baseline , btagMM, ringCut
s2b0jMassSidebandRingLarge = baseline , btagMM, ringCutLarge
s2b0jMassSidebandRingVLarge = baseline , btagMM, ringCutVLarge


s0b2jMcut              = s0b2j,     ellypsMassCut
s0b2jresolvedMcut      = s0b2jMcut, isBoosted != 1
s0b2jresolvedMcutMtcut = s0b2jresolvedMcut, mT1 < 30



s2b0jresolvedMcutMTCut = s2b0jresolvedMcut, MTcut



baselineVBFMcut = baselineVBF, ellypsMassCut




#########################################################################
#########################################################################

## weights to be applied for a certain selections when calling Fill()
## multiple weights are passed as list and are multiplied together
## NOTE: no weight is applied for data (the simple Fill() is used)
[selectionWeights]

baseline = MC_weight, trigSF, PUReweight, DYscale_MM , IdAndIsoSF, FakeRateSF,jetFakeSF
baselineHTauTau = MC_weight, trigSF, PUReweight, IdAndIsoSF, FakeRateSF,jetFakeSF
baseline92 = MC_weight, trigSF, PUReweight, DYscale_MM , IdAndIsoSF_tauID92, FakeRateSF,jetFakeSF
baselineHTauTau92 = MC_weight, trigSF, PUReweight, IdAndIsoSF_tauID92, FakeRateSF,jetFakeSF
cross = MC_weight, trigSF_cross, PUReweight, DYscale_MM , IdAndIsoSF, FakeRateSF,jetFakeSF
single = MC_weight, trigSF_single, PUReweight, DYscale_MM , IdAndIsoSF, FakeRateSF,jetFakeSF
#baseline = MC_weight, trigSF, PUReweight, DYscale_MM , FakeRateSF


#btagLL   = bTagweightL, DYscale_LL
#btagMM   = bTagweightM, DYscale_MM
#nobtagMM = bTagweightM, DYscale_MM
#btagL    = bTagweightL, DYscale_LL ## fixme: should DY scale be rederived for single tag?
#btagM    = bTagweightM, DYscale_MM ## fixme: should DY scale be rederived for single tag?

btagLL   = bTagweightL
btagMM   = bTagweightM
nobtagMM = bTagweightM
btagL    = bTagweightL
btagM    = bTagweightM


#########################################################################
#########################################################################

[sampleWeights]
TTfullyHad = TTtopPtreweight
TTfullyLep = TTtopPtreweight
TTsemiLep  = TTtopPtreweight
#DY = DYLOtoNLOreweight
#DYJetsToLL = DYLOtoNLOreweight
#DY1JetsToLL = DYLOtoNLOreweight
#DY2JetsToLL = DYLOtoNLOreweight
#DY3JetsToLL = DYLOtoNLOreweight
#DY4JetsToLL = DYLOtoNLOreweight
#DYBBJetsToLL = DYLOtoNLOreweight
#DYJets_0j0b = DYLOtoNLOreweight
#DYJets_1j0b = DYLOtoNLOreweight
#DYJets_1j1b = DYLOtoNLOreweight
#DYJets_2j0b = DYLOtoNLOreweight
#DYJets_2j1b = DYLOtoNLOreweight
#DYJets_2j2b = DYLOtoNLOreweight
#DYJets_3j0b = DYLOtoNLOreweight
#DYJets_3j1b = DYLOtoNLOreweight
#DYJets_3j2b = DYLOtoNLOreweight
#DYJets_3j3b = DYLOtoNLOreweight
#DYJets_4j0b = DYLOtoNLOreweight
#DYJets_4j1b = DYLOtoNLOreweight
#DYJets_4j2b = DYLOtoNLOreweight
#DYJets_4j3b = DYLOtoNLOreweight
#DYJets_4j4b = DYLOtoNLOreweight


#########################################################################
#########################################################################


# define alternative weights to be tested instead of the nominal one
[systematics]
TTtopPtreweight  = topUp:TTtopPtreweight_up , topDown:TTtopPtreweight_down
# trigSF         = trigUP:trigSF_up , trigDOWN:trigSF_down
# turnOnreweight = rewUP:turnOnreweight_tauup, rewDO:turnOnreweight_taudown

#########################################################################
#########################################################################

# ROOT-like definition of the binning
[histos]
mT                = 20, 0, 200
HH_pt             = 50, 0, 500
HHsvfit_pt        = 50, 0, 500
HHKin_mass        = 50, 250, 1000
bjet1_bID         = 50, 0., 1.
bjet2_bID         = 50, 0., 1.
bjet1_bID_deepCSV = 20, 0, 1.
bjet2_bID_deepCSV = 20, 0, 1.
HH_deltaPhi       = 15, 0., 3.14159
tauHMet_deltaPhi  = 15, 0., 3.14159
bHMet_deltaPhi    = 15, 0., 3.14159
ditau_deltaPhi    = 15, 0., 3.14159
dib_deltaPhi      = 15, 0., 3.14159
# dau1_pt           = 200, 23, 403
dau1_pt           = 40, 0, 200
dau1_eta          = 25, -2.5, 2.5
dau1_phi          = 25, -3.14159, 3.14159
dau1_iso          = 25, 0, 1
# dau2_pt           = 20, 0, 400
dau2_pt           = 40, 0, 200
dau2_eta          = 25, -2.5, 2.5
dau2_phi          = 25, -3.14159, 3.14159
dau2_iso          = 25, 0, 1
bjet1_pt          = 30, 0, 300
bjet2_pt          = 30, 0, 300
bjet1_eta         = 25, -2.4, 2.4
bjet2_eta         = 25, -2.4, 2.4
bjet1_phi         = 25, -3.14159, 3.14159
bjet2_phi         = 25, -3.14159, 3.14159
met_et            = 35,0,350
met_phi           = 25, -0.2, 6.3
met_er_et         = 30, 0, 600
met_er_phi        = 25, -3.14159, 3.14159
# bH_mass           = 25, 10, 510
# bH_mass           = 50, 0, 300
bH_mass           = 50, 0, 500
tauH_mass         = 25, 10, 510
bH_mass_raw       = 50, 0, 300
# tauH_SVFIT_mass   = 25, 0, 500
tauH_SVFIT_mass   = 50, 0, 500
HHmass            = 25, 0, 1000
njets              = 20,-0.5,19.5
njets20            = 20,-0.5,19.5
nbjetscand              = 20,-0.5,19.5
nbjets20            = 20,-0.5,19.5
npv               = 25, 0, 50
npu               = 25, 0, 50
rho               = 25, 0, 50
tauHMetdeltaPhi   = 25, 0, 3.15
bHMetdeltaPhi     = 25, 0, 3.15
ditau_deltaR       = 25, 0, 5
dib_deltaR         = 25, 0, 5
dau1MET_deltaphi       = 25, 0, 3.14159
tauHsvfitMet_deltaPhi = 25, 0, 3.14159
mT1                   = 20, 0, 200.
mT2                   = 20, 0, 200.
HHsvfit_deltaPhi      = 25, 0, 3.14159
dib_deltaR_per_bHpt          = 60, 0, 600
ditau_deltaR_per_tauHsvfitpt = 60, 0, 600
BDTResonant           = 25,-1,1
# BDTResonantLM         = 25,-1,1
# BDTResonantHM         = 25,-1,1
BDTResonantLM         = 2500,-1,1
BDTResonantHM         = 2500,-1,1
BDTNonResonant        = 25,-1,1

LepTauKine            = 25,-0.94,0.94
genDecMode1           = 10, -2, 8
dau1_dxy           = 100, -0.01, 0.01
dau1_dz            = 100, -0.1, 0.1
fatjet_softdropMass = 50, 0, 300
ditau_deltaEta       = 20, 0, 10
HH_deltaR            = 35, 0, 7
tauH_pt              = 20, 0, 300
VBFjj_dEtaSign       = 40, -20, 20
dib_dEtaSign         = 40, -20, 20
VBFjj_deltaEta       = 20, 0, 10
VBFjj_mass           = 20, 0, 1500
VBFjet2_pt           = 20, 0, 500
bH_VBF1_deltaEta     = 10, 0, 10
VBFjet1_btag_deepCSV = 20, -1, 1
VBFjet1_pt           = 20, 0, 500
VBFjet2_PUjetID      = 20, -1, 1

jet3_pt		     = 20, 0, 300
jet4_pt		     = 20, 0, 300
jet3_eta	     = 25, -5, 5
jet4_eta	     = 25, -5, 5

BDT_MET_bH_cosTheta = 20,  -1,   1
BDT_HT20            = 20,   0, 400
bH_pt               = 20,   0, 400
p_zeta              = 30, -50, 250
HH_zV               = 40, -10, 10

BDToutVBF           = 40, -1, 1


BDToutSM_kl_1            = 20,-1,1
BDToutLM_spin_0_mass_280 = 20,-1,1
BDToutMM_spin_0_mass_400 = 20,-1,1
BDToutHM_spin_0_mass_650 = 20,-1,1

isTau2real          = 2, 0, 2

lmrBDTCut70rej      = 30, -1, 1

top_Wc_bclose_mass = 20, 0, 600
top_Wc_bcentral_mass = 20, 0, 600
top_Wc_bforward_mass = 20, 0, 600
top_Wf_bclose_mass = 20, 0, 600
top_Wf_bcentral_mass = 20, 0, 600
top_Wf_bforward_mass = 20, 0, 600
top_Wmass_bclose_mass = 20, 0, 600
top_Wjj_b_mass = 20, 0, 600
top_Wjj_bclose_mass = 20, 0, 600

FakeRateSF = 10, 1 ,1.5


#########################################################################
#########################################################################

# user defined binning for a variable - has precedence on [histos]
[binning]
HH_mass             = 200, 250, 300, 350, 450, 600, 1000
# HH_mass_raw         = 200, 225, 250, 275, 300, 325, 350, 400, 450, 500, 550, 600, 1000 # temp for mass sideband control
# HH_mass_raw         = 200, 250, 300, 350, 450, 600, 1000
# HH_mass_raw_tauup   = 200, 250, 300, 350, 450, 600, 1000
# HH_mass_raw_taudown = 200, 250, 300, 350, 450, 600, 1000
HHKin_mass          = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000, 1600
# HHKin_mass_raw      = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000, 1600
# HHKin_mass_raw      = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000
# HH_mass_raw          = 0, 100, 200, 225, 250, 260, 270, 280, 290, 300, 325, 350, 375, 400, 425, 450, 475, 500, 550, 600, 650, 700, 850, 1000
HH_mass_raw             = 0, 100, 120, 140, 160, 180, 200, 225, 250, 275, 300, 325, 350, 375, 400, 500
HHsvfit_mass            = 0, 100, 120, 140, 160, 180, 200, 225, 250, 275, 300, 325, 350, 375, 400, 500

HHKin_mass_raw          = 250, 260, 270, 280, 290, 300, 325, 350, 375, 400, 425, 450, 475, 500, 550, 600, 650, 700, 850, 1000
HHKin_mass_raw_tauup    = 250, 260, 270, 280, 290, 300, 325, 350, 375, 400, 425, 450, 475, 500, 550, 600, 650, 700, 850, 1000
HHKin_mass_raw_taudown  = 250, 260, 270, 280, 290, 300, 325, 350, 375, 400, 425, 450, 475, 500, 550, 600, 650, 700, 850, 1000
HHKin_mass_raw_jetup    = 250, 260, 270, 280, 290, 300, 325, 350, 375, 400, 425, 450, 475, 500, 550, 600, 650, 700, 850, 1000
HHKin_mass_raw_jetdown  = 250, 260, 270, 280, 290, 300, 325, 350, 375, 400, 425, 450, 475, 500, 550, 600, 650, 700, 850, 1000

bH_mass             = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
# bH_mass_raw         = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
# bH_mass_raw         = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
# fatjet_softdropMass = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
# tauH_SVFIT_mass     = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
# MT2                 = 0, 25, 50, 75, 100, 125, 150, 175, 200, 250, 300, 350, 500, 600

# MT2                 = 0, 12.5, 25, 37.5, 50, 62.5, 75, 87.5, 100, 125, 150, 175, 200, 250, 300, 500 # temp for mass sideband control
MT2                 = 0, 25, 50, 75, 100, 125, 150, 175, 200, 250, 300, 500
MT2_tauup           = 0, 25, 50, 75, 100, 125, 150, 175, 200, 250, 300, 500
MT2_taudown         = 0, 25, 50, 75, 100, 125, 150, 175, 200, 250, 300, 500
MT2_jetup           = 0, 25, 50, 75, 100, 125, 150, 175, 200, 250, 300, 500
MT2_jetdown         = 0, 25, 50, 75, 100, 125, 150, 175, 200, 250, 300, 500
#########################################################################
#########################################################################

[histos2D]
tauH_SVFIT_mass:bH_mass_raw = 100, 0, 500, 100, 0, 500
tauH_SVFIT_mass:bH_mass     = 100, 0, 500, 100, 0, 500
tauH_SVFIT_mass:dau1_pt     = 100, 0, 500, 100, 0, 500
genDecMode1:genDecMode2     = 10, -2,   8, 10, -2, 8
VBFjj_deltaEta:VBFjj_mass   = 40,  0,  10, 80,  0, 4000

# user defined binning for a variable - will override the definition in [histos2D]
# NOTE: if both x and y binnings are defined, there is no need to insert a binning in [histos2D]
# note: to specify an user binning for a certain axis of a 2D plot, e.g. a binning for B in A:B, use '@' :
# A:B@B = 0, 15, 20, 30, 50, 1000
[binning2D]
# tauH_SVFIT_mass:bH_mass_raw@bH_mass_raw     = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
# tauH_SVFIT_mass:bH_mass_raw@tauH_SVfit_mass = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500