# the definition of composed selections. Can contain as well TCut style selections, e.g.:
# resolved = baseline, btagMM, massCut
# resolvedHighPt = baseline, btagMM, massCut, dau1_pt > 150
# use comma separated lists
[selections]

baseline     = pairType == 3 && dau1_pt > 22 && abs (dau1_eta) < 2.1 && dau2_pt > 10 && abs (dau2_eta) < 2.4 && nleps == 0
baseline_MET40     = baseline, met_et < 40
baseline6060 = baseline, dau1_pt > 60 && dau2_pt > 60
baseline5050 = baseline, dau1_pt > 50 && dau2_pt > 50
baseline4040 = baseline, dau1_pt > 40 && dau2_pt > 40
baseline3030 = baseline, dau1_pt > 30 && dau2_pt > 30


baselineNW     = pairType == 3 && dau1_pt > 22 && abs (dau1_eta) < 2.1 && dau2_pt > 10 && abs (dau2_eta) < 2.4 && nleps == 0
baseline55     = baseline, dau1_pt > 55 && dau2_pt > 55
baseline_wlep     = pairType == 3 && dau1_pt > 22 && abs (dau1_eta) < 2.1 && dau2_pt > 22 && abs (dau2_eta) < 2.3
baseline_mvis60 = baseline, tauH_mass > 60
baselineNW_mvis60 = baselineNW, tauH_mass > 60

baseline_pt0to50 = baseline, tauH_pt < 50
baseline_pt50to150 = baseline, tauH_pt > 50 &&tauH_pt < 150
baseline_pt150 = baseline, tauH_pt > 150


btagL        = bjet1_bID_deepCSV > 0.1522 && bjet2_bID_deepCSV < 0.1522
btagM        = bjet1_bID_deepCSV > 0.4941 && bjet2_bID_deepCSV < 0.4941
btagLL       = bjet1_bID_deepCSV > 0.1522 && bjet2_bID_deepCSV > 0.1522
btagMM       = bjet1_bID_deepCSV > 0.4941 && bjet2_bID_deepCSV > 0.4941
nobtagM      = bjet1_bID_deepCSV < 0.4941 && bjet2_bID_deepCSV < 0.4941
nobtagL      = bjet1_bID_deepCSV < 0.1522 && bjet2_bID_deepCSV < 0.1522
antiB        = bjet1_bID_deepCSV < 0.4941 && bjet2_bID_deepCSV < 0.4941


minTauMassCut  = tauH_mass > 60
tauMassCut     = tauH_mass > 80 && tauH_mass < 100
loosetauMassCut  = tauH_mass > 60 && tauH_mass < 120
METCut         = met_et < 40
bMassCut       = bH_mass > 80 && bH_mass < 160
dphicut        = ditau_deltaPhi > 0.5
SR             = isOS != 0 && dau1_iso < 0.15 && dau2_iso < 0.15

s2b0jresolved = isBoosted != 1, btagMM, baseline
s1b1jresolved = isBoosted != 1, btagM, baseline


baseline_noQCD     = baseline, METCut, bMassCut, minTauMassCut
baseline6060_noQCD = baseline6060, METCut, bMassCut, minTauMassCut
baseline4040_noQCD = baseline4040, METCut, bMassCut, minTauMassCut
baseline3030_noQCD = baseline3030, METCut, bMassCut, minTauMassCut
antiB_noQCD     = baseline, METCut, bMassCut, minTauMassCut, antiB
antiB6060_noQCD = baseline6060, METCut, bMassCut, minTauMassCut, antiB

2jetsALLcut = baseline, METCut, loosetauMassCut, minTauMassCut, bMassCut, bjet1_pt > 20 && bjet2_pt > 20
0b2jMmetbcut = baseline, nobtagM , METCut, bMassCut, minTauMassCut
1b1jMmetbcut = baseline, btagM ,   METCut, bMassCut, minTauMassCut
2b0jMmetbcut = baseline, btagMM, METCut, bMassCut, minTauMassCut
0b2jMmetbcutMcut = baseline, nobtagM , METCut, bMassCut, minTauMassCut,tauMassCut
1b1jMmetbcutMcut = baseline, btagM ,   METCut, bMassCut, minTauMassCut,tauMassCut
2b0jMmetbcutMcut = baseline, btagMM, METCut, bMassCut, minTauMassCut,tauMassCut


### Pisa's weigths sideband

dRtauCut = ditau_deltaR > 0.1
ellCut  = ((tauH_mass-116.)*(tauH_mass-116.))/(40.*40.) + ((bH_mass_raw-111.)*(bH_mass_raw-111.))/(50.*50.) <  1.0
MET45 = met_et < 45.
vtxs = dau1_dxy < 0.045 && dau2_dxy< 0.045 && dau1_dz < 0.2 && dau2_dz < 0.2 

baseline_newWeights = baseline, dRtauCut, ellCut, MET45, vtxs
#########################################################################
#########################################################################

## weights to be applied for a certain selections when calling Fill()
## multiple weights are passed as list and are multiplied together
## NOTE: no weight is applied for data (the simple Fill() is used)
[selectionWeights]
baseline = MC_weight, IdAndIsoSF, trigSF, PUReweight, FakeRateSF
baseline_wlep = MC_weight, IdAndIsoSF, trigSF, PUReweight
btagLL   = bTagweightL, DYscale_LL
btagMM   = bTagweightM, DYscale_MM
nobtagMM = bTagweightM, DYscale_MM
btagL    = bTagweightL, DYscale_LL ## fixme: should DY scale be rederived for single tag?
btagM    = bTagweightM, DYscale_MM ## fixme: should DY scale be rederived for single tag?

# remove DY weights, they are already taken into account in [sampleWeights]
#btagLL   = bTagweightL
#btagMM   = bTagweightM
#nobtagMM = bTagweightM
#btagL    = bTagweightL
#btagM    = bTagweightM
#btag1M   = bTagweightM


#########################################################################
#########################################################################

[sampleWeights]
TTfullyHad = TTtopPtreweight
TTfullyLep = TTtopPtreweight
TTsemiLep  = TTtopPtreweight
#DY = DYLOtoNLOreweight
#DY1b = DYLOtoNLOreweight
#DY0b = DYLOtoNLOreweight
#DY2b = DYLOtoNLOreweight
#DYJetsToLL = DYLOtoNLOreweight
#DY1JetsToLL = DYLOtoNLOreweight
#DY2JetsToLL = DYLOtoNLOreweight
#DY3JetsToLL = DYLOtoNLOreweight
#DY4JetsToLL = DYLOtoNLOreweight
#DYBBJetsToLL = DYLOtoNLOreweight

#DYJets_0j0b = DYLOtoNLOreweight
#DYJets_1j0b = DYLOtoNLOreweight
#DYJets_1j1b = DYLOtoNLOreweight
#DYJets_2j0b = DYLOtoNLOreweight
#DYJets_2j1b = DYLOtoNLOreweight
#DYJets_2j2b = DYLOtoNLOreweight
#DYJets_3j0b = DYLOtoNLOreweight
#DYJets_3j1b = DYLOtoNLOreweight
#DYJets_3j2b = DYLOtoNLOreweight
#DYJets_3j3b = DYLOtoNLOreweight
#DYJets_4j0b = DYLOtoNLOreweight
#DYJets_4j1b = DYLOtoNLOreweight
#DYJets_4j2b = DYLOtoNLOreweight
#DYJets_4j3b = DYLOtoNLOreweight
#DYJets_4j4b = DYLOtoNLOreweight

#DYJets_0j0b = DYptZweight
#DYJets_1j0b = DYptZweight
#DYJets_1j1b = DYptZweight
#DYJets_2j0b = DYptZweight
#DYJets_2j1b = DYptZweight
#DYJets_2j2b = DYptZweight
#DYJets_3j0b = DYptZweight
#DYJets_3j1b = DYptZweight
#DYJets_3j2b = DYptZweight
#DYJets_3j3b = DYptZweight
#DYJets_4j0b = DYptZweight
#DYJets_4j1b = DYptZweight
#DYJets_4j2b = DYptZweight
#DYJets_4j3b = DYptZweight
#DYJets_4j4b = DYptZweight

#DYJets_0j0b = DY_NPVweight
#DYJets_1j0b = DY_NPVweight
#DYJets_1j1b = DY_NPVweight
#DYJets_2j0b = DY_NPVweight
#DYJets_2j1b = DY_NPVweight
#DYJets_2j2b = DY_NPVweight
#DYJets_3j0b = DY_NPVweight
#DYJets_3j1b = DY_NPVweight
#DYJets_3j2b = DY_NPVweight
#DYJets_3j3b = DY_NPVweight
#DYJets_4j0b = DY_NPVweight
#DYJets_4j1b = DY_NPVweight
#DYJets_4j2b = DY_NPVweight
#DYJets_4j3b = DY_NPVweight
#DYJets_4j4b = DY_NPVweight

#########################################################################
#########################################################################


# define alternative weights to be tested instead of the nominal one
[systematics]
TTtopPtreweight  = topUP:TTtopPtreweight_up , topDOWN:TTtopPtreweight_down
# trigSF         = trigUP:trigSF_up , trigDOWN:trigSF_down
# turnOnreweight = rewUP:turnOnreweight_tauup, rewDO:turnOnreweight_taudown

#########################################################################
#########################################################################

# ROOT-like definition of the binning
[histos]
mT                = 20, 0, 200
HH_pt             = 50, 0, 500
HHKin_mass        = 50, 250, 1000
bjet1_bID         = 50, 0., 1.
bjet2_bID         = 50, 0., 1.
bjet1_bID_deepCSV = 20, 0, 1.
bjet2_bID_deepCSV = 20, 0, 1.
HH_deltaPhi       = 15, 0., 3.14159
tauHMet_deltaPhi  = 15, 0., 3.14159
bHMet_deltaPhi    = 15, 0., 3.14159
ditau_deltaPhi    = 15, 0., 3.14159
dib_deltaPhi      = 15, 0., 3.14159
# dau1_pt           = 200, 23, 403
dau1_pt           = 40, 0, 200
dau1_eta          = 25, -2.5, 2.5
dau1_phi          = 25, -3.14159, 3.14159
dau1_iso          = 24, 0, 8
# dau2_pt           = 20, 0, 400
dau2_pt           = 40, 0, 200
dau2_eta          = 25, -2.5, 2.5
dau2_phi          = 25, -3.14159, 3.14159
dau2_iso          = 24, 0, 8
bjet1_pt          = 30, 0, 300
bjet2_pt          = 30, 0, 300
bjet1_eta         = 25, -2.4, 2.4
bjet2_eta         = 25, -2.4, 2.4
bjet1_phi         = 25, -3.14159, 3.14159
bjet2_phi         = 25, -3.14159, 3.14159
met_et            = 30, 0, 600
met_phi           = 25, -0.2, 6.3
met_er_et         = 30, 0, 600
met_er_phi        = 25, -3.14159, 3.14159
# bH_mass           = 25, 10, 510
bH_mass           = 50, 0, 300
tauH_mass         = 50, 50, 150
bH_mass_raw       = 50, 0, 300
tauH_SVFIT_mass   = 25, 0, 500
HHmass            = 25, 0, 1000
njets              = 20,-0.5,19.5
njets20            = 20,-0.5,19.5
npv               = 25, 0, 50
npu               = 25, 0, 50
rho               = 25, 0, 50
tauHMetdeltaPhi   = 25, 0, 3.15
bHMetdeltaPhi     = 25, 0, 3.15
ditau_deltaR       = 25, 0, 5
dib_deltaR         = 25, 0, 5
dau1MET_deltaphi       = 25, 0, 3.14159
tauHsvfitMet_deltaPhi = 25, 0, 3.14159
mT1                   = 20, 0, 200.
mT2                   = 20, 0, 200.
HHsvfit_deltaPhi      = 25, 0, 3.14159
dib_deltaR_per_bHpt          = 60, 0, 600
ditau_deltaR_per_tauHsvfitpt = 60, 0, 600
BDTResonant           = 25,-1,1
# BDTResonantLM         = 25,-1,1
# BDTResonantHM         = 25,-1,1
BDTResonantLM         = 2500,-1,1
BDTResonantHM         = 2500,-1,1
BDTNonResonant        = 25,-1,1
BDToutSM_kl_1         = 25, -1, 1
LepTauKine            = 25,-0.94,0.94
genDecMode1           = 10, -2, 8
dau1_dxy           = 100, -0.01, 0.01
dau1_dz            = 100, -0.1, 0.1
fatjet_softdropMass = 50, 0, 300

HH_deltaR            = 35, 0, 7
tauH_pt              = 30, 0, 300
VBFjj_dEtaSign       = 40, -20, 20
dib_dEtaSign         = 40, -20, 20
VBFjj_deltaEta       = 20, 0, 10
VBFjj_mass           = 20, 0, 1500
VBFjet2_pt           = 20, 0, 500
bH_VBF1_deltaEta     = 10, 0, 10
VBFjet1_btag_deepCSV = 20, -1, 1
VBFjet1_pt           = 20, 0, 500
VBFjet2_PUjetID      = 20, -1, 1

jet3_pt		     = 20, 0, 300
jet4_pt		     = 20, 0, 300
jet3_eta	     = 25, -5, 5
jet4_eta	     = 25, -5, 5

BDT_MET_bH_cosTheta = 20,  -1,   1
BDT_HT20            = 20,   0, 400
bH_pt               = 20,   0, 400
p_zeta              = 30, -50, 250
HH_zV               = 40, -10, 10

BDToutVBF           = 40, -1, 1

#########################################################################
#########################################################################

# user defined binning for a variable - has precedence on [histos]
[binning]
HH_mass             = 200, 250, 300, 350, 450, 600, 1000
HH_mass_raw         = 200, 250, 300, 350, 450, 600, 1000
HH_mass_raw_tauup   = 200, 250, 300, 350, 450, 600, 1000
HH_mass_raw_taudown = 200, 250, 300, 350, 450, 600, 1000
HHKin_mass          = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000, 1600
HHKin_mass_raw      = 250, 275, 300, 350, 400, 450, 500, 600, 700, 850, 1000, 1600
bH_mass             = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
# bH_mass_raw         = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
tauH_SVFIT_mass     = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
MT2                 = 0, 25, 50, 75, 100, 125, 150, 175, 200, 250, 300, 350, 500, 600

#########################################################################
#########################################################################

[histos2D]
tauH_SVFIT_mass:bH_mass_raw = 100, 0, 500, 100, 0, 500
tauH_mass:bH_mass_raw = 100, 0, 500, 100, 0, 500
tauH_SVFIT_mass:dau1_pt     = 100, 0, 500, 100, 0, 500
# user defined binning for a variable - will override the definition in [histos2D]
# NOTE: if both x and y binnings are defined, there is no need to insert a binning in [histos2D]
# note: to specify an user binning for a certain axis of a 2D plot, e.g. a binning for B in A:B, use '@' :
# A:B@B = 0, 15, 20, 30, 50, 1000
[binning2D]
# tauH_SVFIT_mass:bH_mass_raw@bH_mass_raw     = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500
# tauH_SVFIT_mass:bH_mass_raw@tauH_SVfit_mass = 10, 35, 60, 85, 110, 135, 160, 185, 210, 250, 300, 350, 400, 500